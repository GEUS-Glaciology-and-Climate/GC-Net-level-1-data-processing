' New program for Greenland AWS with CR1000 and GOES TX312 transmitter
' Kanger, Greenland: 20 April, 2009
' Original program from CR10X Larsen C project
'
'
' Program written at Princess Elizabeth Sation, Antarctica, 8 Feb. 2013
' AWS station at PE Air and PE Gun
' modified in Washington DC on Jan 5, 2014 by adding the ARGOS transmitter
' CRBasic angle units are in Radians by default.
'
' rev 5, ARGOS 2014 PE Blue
' Changes Feb 13, 14. CSI
' 1) changed name from battery to batt_volt, battery is the name of an instruction
' 2) Moved sample(batt_volt) from table 46 to table 048 to keep the number
'    of parameters for each table at 15
' 3) Added a second argossetup and argosdata to handle both data tables.
' 4) Changed the number of records back to just 1, the buffer can only handle one record of
'    15 values
' 5) Changed the timing for the argostransmit just a bit. Try to make it less likely to
'    transmit while another station is transmitting
' 6) Changed scan interval to a mulitple of 10, selected 20. 


AngleDegrees
'
'
'\\\\\\\\\\\\\\\\\\\\\\\\\ DECLARATIONS /////////////////////////

' Define station name 1 SC, 2 CP1, 3 NASA-U, 4 GITS, 5 HUM, 6 SUM, 7 Tune-N, 8 Dye-I, 9 JAR1
' 10 Saddle, 11 S-Dome, 12 NASA-E, 13 CP2, 14 NGIRP, 15 NASA-SE, 16 KAR, 17 JAR2, 18 KULU
' 19 JAR3, 20 Aurora, 21 PET Gl, 22 PET ELA, 23 NEEM, 41 PE-Air, 42 PE-Gun, 43 PE-Blue

StationName=42

Public i1
Public i
Public rTime(9)
Public TRef
Public alpha1
Public sw_in(2)
Public net_rad
Public tc_air(2)
Public t_air(2)
Public rh(2)
Public U(2)
Public wind1_knot
Public wind2_knot
Public Dir(2)
Public pressure
Public Pressure_MSL
Public SD_1
Public SD_2
Public Batt_volt
Public p_flag
Public LoggerID
Public ArgosResult

Alias sw_in(2) = sw_ref
Alias rTime(1) = Year          'assign the alias Year to rTime(1)
Alias rTime(2) = Month         'assign the alias Month to rTime(2)
Alias rTime(3) = DOM           'assign the alias Day to rTime(3)
Alias rTime(4) = Hour          'assign the alias Hour to rTime(4)
Alias rTime(5) = Minute        'assign the alias Minute to rTime(5)
Alias rTime(6) = Second        'assign the alias Second to rTime(6)
Alias rTime(7) = uSecond       'assign the alias uSecond to rTime(7)
Alias rTime(8) = WeekDay       'assign the alias WeekDay to rTime(8)
Alias rTime(9) = Day_of_Year   'assign the alias Day_of_Year to rTime(9)

' for ST-21 ARGOS trasmitter
Public setup_rc(2), data_rc(2), xmit_rc(2), DataReady As Boolean, go As Boolean


'\\\\\\\\\\\\\\\\\\\\\\\\ OUTPUT SECTION ////////////////////////
DataTable(Table046,true,-1)
  OpenInterval
  DataInterval(0,60,Min,-1)
  Sample (1, LoggerID, FP2)
  Sample (1,Year,FP2)
  Sample (1, Day_of_Year,FP2)
  Sample (1,Hour,FP2)
  Average(2, sw_in, FP2, 0)
  Average(1, net_rad, FP2, 0)
  Average(2, tc_air, FP2, 0)
  Average(2, t_air, FP2, 0)
  Average(2, rh, FP2, 0)
  Average(2, U, FP2, 0) 
  CardOut (0,-1)
EndTable

DataTable(Table048,true,-1)
  OpenInterval
  DataInterval(0,60,Min,-1)
  Sample (1, LoggerID, FP2)
  Average(2, Dir, FP2, 0)
  Average(1, pressure, FP2, 0)
  Average(1, SD_1, FP2, 0)
  Average(1, SD_2, FP2, 0)
  Maximum (1,sw_in(),FP2,False,False)
  StdDev (1,sw_in(),FP2,False)
  Maximum(2, tc_air, FP2, 0, False)
  Minimum(2, tc_air, FP2, 0, False)
  Maximum(2, U(), FP2, 0, False)
  Sample(1, Batt_volt, FP2)
  CardOut (0,-1)
EndTable

'\\\\\\\\\\\\\\\\\\\\\\\\\ SUBROUTINES //////////////////////////


'\\\\\\\\\\\\\\\\\\\\\\\\\\\ PROGRAM ////////////////////////////

BeginProg

  '  check which pressure sensor *******************************************
  p_flag = 0
  '  set pressure sensor option. 0 is for the new cs106 = PTB110 pressure sensor
  '  p_flag = 1 is for cs105 = PTB101B pressure sensor.

  Scan(20,Sec, 3, 0)
    ' 15 second suggested execution interval
    ' give data logger and data set an ID
    LoggerID=Status.StationName(1,1)

    VoltDiff (sw_in,2,mV25,7,True ,0,250,1.0,0)
    ' Two Li Cor Photo-Diode Pyranometers

    ' end Li Cor multiplexer loop
    If (sw_in < 0) Then
      sw_in = 0
    EndIf
    ' end set negative SW in values to zero
    If (sw_ref < 0) Then
      sw_ref = 0
    EndIf
    ' end set negative SW ref values to zero

    VoltSe (net_rad,1,mV250,8,1,0,250,1.0,0)
    ' Net Radiometer

    PanelTemp (TRef,250)
    ' Reference temperatrue of CR1000 data logger

    TCDiff (tc_air,2,mV2_5,5,TypeE,TRef,True ,0,250,1.0,0)
    ' 2 air temperature thermocouple

    PulseCount(U, 2, 1, 1, 1, 0.098, 0)
    ' Young Wind Monitor wind speed -> m/s

    ' convert to knots
    wind1_knot=U(1)*1.943844
    wind2_knot=U(2)*1.943844


    If  TimeIntoInterval(0,60,Min) Then RealTime (rTime)

    CallTable Table046
    CallTable Table048

    ' Output data in final storage every hour -----------------------------
    If  TimeIntoInterval(0,60,Min) Then go = true
    If go Then
      DataReady = true

      ArgosSetup (setup_rc(1),0,135797,&hCBA615F,401630000)'setup first buffer
      ArgosSetup (setup_rc(2),1,135797,&hCBA615F,401632000)'setup second buffer, new frequency

      ArgosData (data_rc(1),0,Table046,1,"FP2")' load data to first buffer
      ArgosData (data_rc(2),1,Table048,1,"FP2")' load data to second buffer
    EndIf

    'transmit each of the two buffers once every 400 seconds. Can't violate
    'the 200 second repeat interval for the one ID number. 10 percent variation is allowed, and recommended
    If DataReady Then
      If IfTime(0,400,sec) Then
        ArgosTransmit (xmit_rc(),0)
      EndIf

      If IfTime(200,400,sec) Then
        ArgosTransmit (xmit_rc(2),1)
      EndIf
    EndIf

  NextScan

  SlowSequence
  Scan(60,Sec, 3, 0)
    ' 60 sec scanning rate

    SW12(1)
    PortSet (6 ,1 )
    ' old HMP45C need trigger on Contral port 6 (C6) for orange cable

    Delay(0,150,mSec)
    VoltSe(t_air, 2, mV2500, 1, 0, 0, 250, 0.1, -40)
    ' 2 temperature cs500 or HMP45 probe x 2

    VoltSe(rh, 2, mV2500, 3, 0, 0, 250, 0.1, 0)
    ' 2 humidity cs500 or HMP45

    PortSet (6 ,0)
    ' close Contral Port 6
    SW12(0

    BrHalf(Dir, 2, mV2500, 5, VX1, 2, 2500, true, 0, 250, 355, 0)
    ' 2 Young wind direction measurement

    ' Following a loop of the barometer measurement that is performed for the last minute of each hour.
    If  TimeIntoInterval(59,60,Min) Then PortSet(7, 1)
    ' The pressure sensor has a range from 600 - 1060 hPa,mb
    ' -> multiplier = sensor range (460)/mV Excitation(2500)

    If (p_flag = 0) Then
      VoltSe(pressure, 1, mV2500, 7, 1, 0, _60Hz, 0.24, 100)
      'new vaisala cs106 pressure sensorlt
      ' offset is 500, need to offset by -400 and add +400 to process data
      Battery(Batt_volt)
    EndIf
    ' end cs106 new pressure sensor measurement last minute of each hr

    If (p_flag = 1) Then
      VoltSe(pressure, 1, mV2500, 7, 1, 0, _60Hz, 0.184, 200)
      ' CS105 Vaisala Barometer
      ' another 400 has to be added to pressure value to yield
      ' mb this can be done in post processing.
      Battery(Batt_volt)
    EndIf
    ' end cs105 pressure sensor measurement last minute of each hr
    PortSet(7, 0)
    ' end pressure sensor measurement last minute of each hr
    ' Following is the snow height measurement which
    ' occurs each 10 minutes, nested in a 15 second
    ' measurement interval.

    ' convert to sea level pressure corrected by temperature
    Pressure_MSL=(pressure+400)/EXP(-9.80665*0.0289644*1382/8.31432/(tc_air(1)+273.15))


    If  TimeIntoInterval(0,2,Min) Then
      SDI12Recorder(SD_1, 3, 0, "M!", 1, 0)
      ' sonic snow height sensor 1
      SDI12Recorder(SD_2, 5, 0, "M!", 1, 0)
      ' sonic snow height sensor 2
    EndIf

  NextScan
EndProg
