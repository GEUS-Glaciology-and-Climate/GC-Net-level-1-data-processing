' New program for Greenland AWS with CR1000 and GOES TX312 transmitter
' Swiss Camp, Greenland: 12 May 2015 witg the snow radar 12 Volt trigger
'
'
'CRBasic angle units are in Radians by default.
'Switch to Degrees as CR10 used Degrees.
 AngleDegrees
'
'
'\\\\\\\\\\\\\\\\\\\\\\\\\ DECLARATIONS /////////////////////////

' Define station name 0 SC 10 m tower, 1 SC, 2 CP1, 3 NASA-U, 4 GITS, 5 HUM, 6 SUM, 7 Tune-N, 8 Dye-I, 9 JAR1
' 10 Saddle, 11 S-Dome, 12 NASA-E, 13 CP2, 14 NGIRP, 15 NASA-SE, 16 KAR, 17 JAR2, 18 KULU
' 19 JAR3, 20 Aurora, 21 PET Gl, 22 PET ELA, 23 NEEM 

StationName=0

Public rTime(9)
Public TRef
Public sw_in(2)
Public net_rad
Public tc_air(1)
Public t_air1(1)
Public t_air2(1)
Public rh(2)
Public U(2)
Public Dir(2)
Public pressure
Public SD_1
Public SD_2
Public Battery
Public p_flag
Public GoesResult

Public LoggerID 

Alias sw_in(2)=sw_ref
Alias rTime(1) = Year          'assign the alias Year to rTime(1)
Alias rTime(2) = Month         'assign the alias Month to rTime(2)
Alias rTime(3) = DOM           'assign the alias Day to rTime(3)
Alias rTime(4) = Hour          'assign the alias Hour to rTime(4)
Alias rTime(5) = Minute        'assign the alias Minute to rTime(5)
Alias rTime(6) = Second        'assign the alias Second to rTime(6)
Alias rTime(7) = uSecond       'assign the alias uSecond to rTime(7)
Alias rTime(8) = WeekDay       'assign the alias WeekDay to rTime(8)
Alias rTime(9) = Day_of_Year   'assign the alias Day_of_Year to rTime(9)

'\\\\\\\\\\\\\\\\\\\\\\\\ OUTPUT SECTION ////////////////////////

DataTable(Table046,true,-1)
  OpenInterval      
  DataInterval(0,60,Min,10)
  Sample (1, LoggerID, FP2)
  Sample (1,Year,FP2)
  Sample (1, Day_of_Year,FP2)
  Sample (1,Hour,FP2)
  Average(2, sw_in, FP2, 0)
  Average(1, net_rad, FP2, 0)
  Average(1, tc_air, FP2, 0)
  Average(1, t_air1, FP2, 0)
  Average(1, t_air2, FP2, 0)
  Average(2, rh, FP2, 0)
  Average(2, U, FP2, 0)
  Average(2, Dir, FP2, 0)
  Average(1, pressure, FP2, 0)
  Average(1, SD_1, FP2, 0)
  Average(1, SD_2, FP2, 0)
  Maximum(1, tc_air, FP2, 0, False)
  Minimum(1, tc_air, FP2, 0, False)
  Maximum(2, U(), FP2, 0, False)
  Sample(1, Battery, FP2)
 
  CardOut (0,-1)
 
 EndTable

'\\\\\\\\\\\\\\\\\\\\\\\\\ SUBROUTINES //////////////////////////

'\\\\\\\\\\\\\\\\\\\\\\\\\\\ PROGRAM ////////////////////////////

BeginProg
  
'  check which presure sensor *******************************************
    p_flag = 0
'  set pressure sensor option. 0 is for the new cs106 = PTB110 pressure sensor
'  p_flag = 1 is for cs105 = PTB101B pressure sensor.
   
  Scan(15,Sec, 3, 0)
' 15 second suggested execution interval
' give data logger and data set an ID
  LoggerID=Status.StationName(1,1)
  
VoltDiff (sw_in,2,mV25,6,True ,0,250,1.0,0)
' Two Li Cor Photo-Diode Pyranometers

' end Li Cor multiplexer loop
    If (sw_in < 0) Then                                  
      sw_in = 0
    EndIf
' end set negative SW in values to zero
    If (sw_ref < 0) Then                                  
      sw_ref = 0
    EndIf

' end set negative SW ref values to zero

VoltDiff (net_rad,1,mV250,8,1,0,250,1,0)
' Net Radiometer

PanelTemp (TRef,250)
' Reference temperatrue of CR1000 data logger

TCDiff (tc_air,1,mV2_5,5,TypeE,TRef,True ,0,250,1.0,0)
' 1 air temperature thermocouple lower level

PulseCount(U, 2, 1, 1, 1, 0.098, 0)     
' Young Wind Monitor wind speed -> m/s

If  TimeIntoInterval(0,60,Min) Then RealTime (rTime)

' Output data in final storage every hour -----------------------------
    If  TimeIntoInterval(10,60,Min) Then                             
      GOESData (GoesResult,Table046,0,1,0)
' check if the data has been sent to the transmitter ------------
      If (GoesResult > 0) Then                                  
          GOESData (GOESResult,Table046,0,1,0)                               
' Transfer data to TX312 GOES transmitter once more
      EndIf
' and once more
' check if the data has been sent to the transmitter ------------
      If (GOESResult > 0) Then                                  
          GOESData (GoesResult,Table046,0,1,0)                               
' Transfer data to TX312 GOES transmitter once more
      EndIf       
    EndIf    

   CallTable Table046 

  NextScan

SlowSequence
  Scan(60,Sec, 3, 0)
' 60 sec scanning rate

    Delay(0,150,mSec)
    VoltSe(t_air1, 1, mV2500, 1, 0, 0,_60Hz,0.14,-80) 
 '  1 temperature HMP155a PROBE
    
    VoltSe(t_air2, 1, mV2500, 2, 0, 0, 250, 0.1, -40) 
' 1 temperature cs500 or HMP45 probe x 2

    VoltSe(rh, 2, mV2500, 3, 0, 0, 250, 0.1, 0) 
' 2 humidity HMP45 OR 155a
          
    BrHalf(Dir, 2, mV2500, 5, VX2, 2, 2500, true, 0, 250, 355, 0)
' 2 Young wind direction measurement

' Following a loop of the barometer measurement that is performed for the last minute of each hour.
    If  TimeIntoInterval(59,60,Min) Then PortSet(7, 1)       
' The pressure sensor has a range from 600 - 1060 hPa,mb
' -> multiplier = sensor range (460)/mV Excitation(2500)
                                
      If (p_flag = 0) Then                                  
'        VoltSe(pressure, 1, mV2500, 9, 1, 0, _60Hz, 0.24, 100)
         VoltDiff (pressure,1,mV2500,4,1,0,_60hz,.24,200)
'new vaisala cs106 pressure sensorlt
' offset is 500, need to offset by -400 and add +400 to process data
        Battery(Battery)
      EndIf
' end cs106 new pressure sensor measurement last minute of each hr

      If (p_flag = 1) Then                                  
'        VoltSe(pressure, 1, mV2500, 9, 1, 0, _60Hz, 0.184, 200) 
         VoltDiff (pressure,1,mV2500,4,1,0,_60hz,.184,200)

' CS105 Vaisala Barometer
' another 400 has to be added to pressure value to yield
' mb this can be done in post processing.
         Battery(Battery)
       EndIf
' end cs105 pressure sensor measurement last minute of each hr
    PortSet(7, 0)  
' end pressure sensor measurement last minute of each hr
' Following is the snow height measurement which
' occurs each 10 minutes, nested in a 15 second
' measurement interval.
                      
    If  TimeIntoInterval(0,2,Min) Then                             
      SDI12Recorder(SD_1, 3, 0, "M!", 1, 0)     
' sonic snow height sensor 1
      SDI12Recorder(SD_2, 5, 0, "M!", 1, 0)     
' sonic snow height sensor 2
    EndIf

  NextScan
      
EndProg
